<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAVQAAAFTCAYAAABml/QNAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAS
        dAAAEnQB3mYfeAAAHTBJREFUeF7t3fmbVNWdx/H+N2ZM4hIjJnFLXGJ0khhCkokxiTHRWZI4iVl8JpnE
        fQkoCCgguyKbKBBFRBYFNEZBgoKiIAhId/VC0wvdDQ297ztn6lvekgZOdVd1nbr3nnPfn+d5/cRWp7v6
        w617z5KnLEhzZ7/aU9mhNhe2qg37m9XzHzSohe/Uqae2HgfgGPnZlp9x+VmXn3n52ZcOsCGhK9Ty+h61
        YmeDumdttbpx4SF10cSY+pf7PwYQcRdPiqmfxjtBuuGFeEdIV4QtgRdqR8+Aenlvk7rjpSp1+ZRC7RcS
        AHSuiHfGnaur1CvxDunsHfBaJbgEUqgDJ5TaWd6u7ltXrb7wcL72CwUAmTh3XL76w4pKtSnWovqkZAKI
        r4UqV6OLt9Ul/lfRfUEAwATpmKe31yU6x8/4Uqht3QNqSXxwl07mfigA/3x5YkzN3FTr20OtnBaqXHbL
        Femo8QXawQKAH0ZNKEhc1OX6VkDOCnVfVaf6wZMHtYMDgCB8Z06J+rCiw2sp8zFeqPLx/u41VepfH9AP
        CACCJN1079pq1Z6D+6tGC7W4tltdN6tEOwgACJNrpxer/Jour73MxFihrt7dqM4bxxQoAPY4Z+yBxL1V
        U8m6UHv7T6i/rKrSvlgAsIEsDjDxwCqrQpWVCb9cWq59gQBgk1uWlCWeAWWTEReqzOv68YJS7QsDABtd
        P69UNbT3eS2XeUZUqE0d/erbs3n4BMA90m3ScSNJxoXaFf+Yz5UpAJfJlepIlq1mVKjyAIp7pgCi4Ffx
        rpPOyyQZFSpP8wFEiTz9zyRpF+ry9+u1/yAAuExOD0g3aRVq7GhXYq9B3T8GAC6Tyf8Hajq9Nhw6wxaq
        rHf9xoxi7T8EAFFwzfRi1do1/EOqYQtVNjrR/QMAECWyocpwGbJQd5V3sGsUAMSdFe/C3cNs/ZeyUGVd
        65i5TN4HgKTRs0uGXPOfslAXbavT/oUAEGVL36v3WvLMaAu1pbOfY0sAQOPCCQUpH1BpC3XOW8e0fxEA
        4GM1b+txry1PzRmFKutXL5rI6aQAkIqcpqpb639GoXLvFACGp9vp/5RClYdXl08p1P5hAMBJV04tTHTm
        4JxSqNtK2rR/EABwpvcOtXvt+UlOKVR2kwKA9N215tTdqD4tVLnBev5DbIACAOm6YHx+4my9ZD4t1HUf
        NWn/AAAgtQ37mr0WHVSofNwHgMzJBlLJfFqo8sRK95sBAKlJdyaTKNTy+h7tbwQADK+yoedkocoW/7rf
        BAAY3spdjScLlU2kAWDkkptPJwr1JwsOaX8TAGB4Ny06dLJQ2QwFAEbu0smxTwq1ubNf+xsAAOmTfaTz
        9lR2aH8RAJC+vVWdKm9TrFX7iwCA9G0palV56/ex5BQAsrVhf7PKW7GTOagAkK0X4l2axw79AJC9xfEu
        zZvNgXwAkDXp0ryZm2q1vwgASJ90KYUKAAZQqABgCIUKAIZQqABgCIUKAIZQqABgCIUKAIZQqABgCIUK
        AIZQqABgCIUKAIZQqABgCIUKAIZQqABgCIUKAIZQqABgCIUKAIZQqABgCIUKAIZQqABgCIUKAIZQqABg
        CIUKAIZQqABgCIUKAIZQqABgCIUKAIZQqABgCIUKAIZQqABgCIUKAIZQqABgCIUKAIZQqABgCIUKAIZQ
        qABgCIUKAIZQqABgCIUKAIZQqABgCIUKAIZQqABgCIUKAIZQqABgCIUKAIZQqABgCIUKAIZQqABgCIUK
        AIZQqABgCIUKAIZQqABgCIUKAIZQqABgCIUKAIZEslAvmRRTY9fXqFf2Nql9VZ2qvL5HNXb0q+bO3DrW
        2qdKj3er98va1cJ36tTNT5epf31A/xrD4tfLK9TrB1oSr1s3pjCrauxVHx3uUIu31akxc0u043PV2WMP
        qN8/X6mWv1+vdld0qEN13b68x2uaelVRbZd6o6BFPfb6UXXl1ELt63NVpAr1rHh5zd1yTHX1DqiwpOBI
        l/reEwe1rzdIn/vrAbVxf7P3Ku1P/8CJxJtdN1aXyH/Q4zbUqNr4f95hSPzLrpbuqFfnjsvXvl7XRKpQ
        V+5q9L7N4Up33wn1m79VaF9zUJ59t957dW7ljpeqtON1wajxBWpbSZs30nDlrcLW0H8aMyEyhXrz4jLv
        WxvOdMavmsNypXr1tKLEFZ2LkY+kcvWtG7fNzn8oX+2t6vRGGc78edVh7Wt3SWQKde1HTd63NbzJr+lS
        n3kw+B/2Sa8d8V6Rm/npwkPacdtMngeEPdtL27Sv3SWRKdSyum7v2xru3L+uWvv6/bTqw3DeGjGVGY69
        3297rsIbWbjT1NGvff0uiUyhykdqGyIzDuThmW4MflmzJ/xXO9lExqcbt43k9kVlQ483snBHfgZ1Y3BJ
        ZAq1t9+ee4IyVUk3Br/M2nzMeyVu5t3Sdu24bXTn6ipvVOFPbUuvdgwuiUyh1rWFYxpJOvlHfot2DH6R
        h2MuR+am6sZtG7k6lU80tuTtYu6hOqO41o57qBK5mv7iIwXacfhFprm4mtjRLu2YbXPP2mpvRHbEtXvX
        OpEpVFmdZFPuXhPsfMnRc0qsuk2SSWQlj27MNpGrU1kJZlN+NL9UOxaXRKZQN+yza9XPplirdhx+mvz3
        o96rcSsuFOoDL9t1dSpP+MMwJTDXIlOo8nHDpsjqqc8/FOxyPZltYNuVfTqxvVDPGXtAHWm26+pU5snq
        xuKayBSqbBRhW377XPDLUa+aWqRauvq9V+RGbC/UCa/at/Ai6JkrfolMoX5rVrH3rbUnYZkvadPUnHRi
        c6FeMD5fNbTbM2NFItOlPhuBj/siMoUqN/Fte8gi953C8EaUTS1c+uhvc6HKbmm2Zc5bx7RjcVFkClXY
        NHUqmZ8vDse68+/OPejMhim2Fuqlk2Oqo8eOFX/JyHtGbhvpxuOiSBXqqx/bt7/nsh312rEEwZU1/rYW
        qrwXbIvsqasbi6siVag2TgM63tYXmukm104vTmwYbHtsLNSvP15k5bzgMG6enkuRKtSbFh3yvs12RY5K
        0Y0nCC6soLKxUF+z8NNVFJaani5ShXreuHzVZ+El1oqdDdrxBOF3Fk4/Oz22FeoN80vVCQs/GfwsfgGj
        G4/LIlWoQjZxti0yTSYsu8zL4W/tlj0YOT02FarMsJDNXGyLzArRjcd1kSvUZyw9K+m/ninXjicIcgqq
        zbGpUP/04mHvVdsVub2mG4/rIleochiejZEn7LrxBMG2deSnx5ZClZNCq5vsWmIq+WdR8PtQBCVyhSrb
        4tn4pLq1ayBxD1g3Jr99Z06J96rsjC2FOvUNu/afkMi93uvnub+rVCqRK1RxoCbcp0Omyh9XhuPUSJnG
        ZfN9VBsK9eJJscR/orZFZiPoxhMVkSzUBe/Ued9+uxKmj1L7q+38T0liQ6G+sLPBe7X2pKfvRGK+rG48
        URHJQg37Gf2pIrcqvvJYoXZMflu/z96D/MJeqN9/4qCVt6XmbT2uHU+URLJQZQqSjR+nJBNfO6Idk99k
        wwtbE+ZClT1o91bZd/V/rLVPfeHhcNzjD1IkC1X83dKpP7Ej4SiDsetrvFdkX8JcqPdadk5UMncFfGRP
        WES2UG074Gxw5COhbkx+un2FvSumwlqoF04oUPWW7XUqkYe8cmWtG1PURLZQL5scs3ajj+c/CH4pquwv
        YGvCWqg27iYl06RuXBjNSfw6kS1UsavcviV9EpmyFPT9KlmnbWvCWKi27jcrh1/qxhNVkS5UG8/mSUZu
        WejG5BcK1RxbT0SQgySjtHl0OiJdqFdOLbRyFx+JbJihG5NfKFRzbD2zK0pHm6Qr0oUqbJyikowsAdWN
        yQ8UqhmXTIolzg6zLXKM9fkBH3MeRpEv1Edft28X/2SCfDhFoZoh9yBtzG0hOOI8jCJfqDZ/7O/sHUhs
        9qIbV65RqNn7xbPl3iuyK1sivJvUcCJfqOIDi49IDmrlFIWanc/HPy5XNvR4r8ieyH/iX5vGg6hUKNQ4
        W1enSKoaewM5xI9Czc7S9+zc6FwOutSNB5+gUONGjS9QXfH/eW3N/yz3/34WhTpyP3yq1Mo5p4VHu0Jz
        FE9YUageOT/c1mwr8f90SQp1ZKSQ5N+3LfKc4ccLortxdLooVM+ty+w8GiWZMXP9nUJFoY7MjPjPmo0J
        08m7YUahej774AFV22Lf+T3JvLy3STuuXKFQMyfzhmUTZtsiG7YENZvENhTqIDbv8dk3cCIxBUw3rlyg
        UDMjx2/L1os25s+rwnH0jg0o1EGumFJo5cOCZJZsr9OOKxco1Mws3mbnsTvbS9sSew3oxoQzUain2VzY
        6r2V7EtHz4D6kk8fzSjU9N2ypMzKxSMy5zTqZ0RlikI9za3L7Fy9kszMzf5sWEGhpkfuPcq6dxvzyKvh
        OG7HJhTqaWSSvEyWtzUtXf1q1ITcX6VSqOmxda3+nsqOQBaM2I5C1Zj6hp1TW5KZ/mbuv58U6vDkYY6N
        6e0/oa6bFdxOZjajUDXkY5rcj7Q1LZ25v0qlUIf21ccKVXP8+2Bj/PgP2VUUagrL37dzrXUy0+JX2bpx
        mUKhpiYH1tm4A78kxvLSrFCoKVw7vdjaQ/wksmlxLq9SKdTUZm22cz6zTBn8wZPBn6hrMwp1CG8W2Hl2
        fzJPbT2uHZcJFKqenAZr61zm+W/n7v0SFRTqEGwuDYnsoPWVx3KzeopCPZPcN22w8Fx9SVldtzp3HEea
        ZItCHcbH1faeOSV5IUebWlCop5L7jh9W2HksuVxQ/2QBZ+ubQKEO4/fPV3pvOzsja/y/ObNYO7ZsUKin
        WrrD3oeYsixWNyZkjkIdhqxjlo11bU4u9kulUE+y9RhoySE+6htFoabhf1faOUF7cH5teFd/mwu19Hi3
        dkwjIZsuy0R4GyMf9X80n02jTaJQ0yBL8OSH0OZUNPSoc8aam19oc6HKlDLdmDJ12aOFVu+hu+AdPuqb
        RqGm6S+r7P1Yl4wsqdWNbSRsLlTZ+SnbXbkumRSz+laQXCDwUd88CjVNsqN/eb19x/4OjkyjMrUdm82F
        KpH/IHXjSodcmR60+BOLzJO9gY/6OUGhZuCuNfZfpb5b2m5kw2DbC/VATWdiiahubEMZPbvEyvP0B4cJ
        /LlDoWZArlJtv5cquW9dtXZ8mbC9UCWZnjF/+wuVqq3b3k1zJMW13UbvpeNUFGqGfmf5vFSJ7Jl6+ZTs
        VlC5UKjylHvs+hrt+Aa7elqR+vsBu5chS2ROMmv1c4tCzZB8XJbNd23PjkPtWW0g7EKhJvN2cVvimBK5
        cpNPIRdOKFDXTC9Wf1x5WG3c35woIhcih1Dqvpcwh0IdgZ8udKNMHs9i38v/fKbM+1uIDSk4wrZ8fqBQ
        R2hLkb2H+SUjV14jndht+9lbUYosPBgzlx34/UChjtB35pRYvV9qMrWtfYldknRjHMofVth/LzkqYQd+
        /1CoWVj7UZP3lrU7+6s71XkZTvIe+0qN96dJmCO7pcl9Yd33EOZRqFm4Ykph4uxyFyJPsTP5wXtii527
        0kctNy1iWz4/UahZmhH/2rmSVz9uTrtUNxfafw/Z9cj3SPe9Q+5QqFmSqTa2r5wZnFf2Nqmzh5n4LU+L
        GzvsPNEzKpH9CkbP4UGU3yhUA257rsJ7G7uRjw53DDnxX1YMkXDng7J27fcOuUWhGiKTw12KbHE38bUj
        Z+xIJFc9x9vsPDcpSjG5sxjSR6EaIseM2LrR8FCRQ+fk3urKXY2JjVVcHKOL+dOLh7XvU+QWhWrQom11
        3tuZkGDz4MvD71EA8yhUgy4Yn5+YKE9I0JGHi7r3KHKLQjXMhd2oiP3p6BlQF02Mad+jyB0KNQf+kW//
        Vm/E/nBmlP8o1By4bHJMNXcyT5MEG9n85vtPsP+pnyjUHLl/XbX3tiYkuMSOdnEYn48o1ByRjai3l7o1
        N5XYmb+936B9j8I8CjWHrp1erLr7mLdJgo+cPqB7j8IsCjXHZMUKIUFHzhEzdYQ4UqNQc0w2EpH9RgkJ
        OrEjXerzD3E/NZcoVB98Y0axM/umErsj+97K/X3d+xTZo1B9wg73JCx55NUj2vcoskeh+kSuClw42I/Y
        H5mf+vPF7OSfCxSqjy6eFGPrOxKKyAbhPKQyj0L12a+Xu7UZNbE3xbXdiQ19dO9TjAyFGoAXdzV6b2lC
        go3sO3EWD6mMoVADIFNXyuq6vbc0IcFm9lvHtO9TZI5CDcj180pVD6uoSAgiB/rdvqJS+z5FZijUADGV
        KvjIQ8Il2+vUnaur1C+eLVe3LClL7Gn7+Ju1avvBtsgc+SLzpL87l52pskWhBmz9vibvLU38zsb9zYlj
        wHXflyTZilF+Po5F4CSG6qZedckkNqXOBoUasPMfylcHj3M/1e9UNPRktK2dfJ+e/Odx52/TfFjRoc4e
        5j8ZpEahhsB1s0oSR1YQ//Lo60e134vhyNxNuRXgcmQWim7sGB6FGhJy7C/xL2Pmlmi/D+mQaUaPxQvZ
        5fur4zeyPHUkKNQQmbf1uPd2JrmMPNU+z8Au9jc8VaoqG3q8v9WtyPLUm58u044bqVGoISJXPhzwl/vU
        t/dpv/4j8eWJscR9Rxcjy1Ovmsry1ExQqCEjD0r2VrF/ai4jV5W6r/1IyUMcOQffxbCHamYo1BC67NFC
        dbS513tLE9MpOdat/bpnQ3YTm7n5mPcvuBX2UE0fhRpSspKqi02pcxI5CVT3NTdhwqtHEvdoXcuk13hI
        lQ4KNcRuXVaReDhAzCaXhSrkCHHXSlXehzcuZA/V4VCoIfd/Lx5WdKrZ5LpQhYulKqvFLp3MSqqhUKgW
        GLueNf8m40ehivscLNV3S9vVZx5kJVUqFKolmKNqLn4VqnDxP8MZ9EVKFKol5CnrCzsbvLc0ySZ+FqqY
        5djT/37OpEqJQrWITPxf9SG7/WcbvwtVLN1R7/3rbkSm9X3pkQLtWKOMQrWMXKkuf9+tH06/E0Shyn1H
        mc/pUl6Pj0c31iijUC0kpbrMsSsePxNEoQpZBbezvN17FW7knrXV2rFGFYVqKSlV1z5G+pWgClWMGl+Q
        WM7pSmTbyW/MKNaONYooVIslSvU9SjXTBFmoQjYckQ1aXMlHhzvUZ5lKlUChOkA2S3ZxuWOuEnShih8v
        cOuQxqlv0CGCQnXEHS9VReZAuWwThkIV8j1zJfLeGz175Jt2u4JCdYis/ZfTK8nQCUuhiqe313mvyv7k
        13Spz/012h/9KVTH3DC/NLExMEmdMBWqTKfaWtzqvTL7I8dv68YZFRSqgy6fUqj2V7NJdaqEqVDFBePz
        VVGtG0/+5b5wlJ/6U6iOkmOPXZtIbiphK1RxzfRi1dzpxieL7aVtiRkounG6jkJ1mLypZQYA2/+dmjAW
        qviPJWWJdfIu5C+rqrRjdB2FGgG/+VuFauvmYVUyYS1U4coxKg3tferCCdFb60+hRoRMJt/t6OmcmSbM
        hSob4LxV6MZDqmferdeO0WUUaoTIaha5Aor6LYAwF6qQK7vyevvP+5djU6I2N5VCjaD/frZc1bW5s/Qx
        04S9UMWYuSVOHNL4dnGbdnyuolAjSs4G2hRzZ/5jJrGhUIUrK6lufrpMOz4XUagR94cVlU5t1JFObClU
        4cIpDR9WdGjH5iIKFeriSTG1YX+z9/Z3PzYV6jljD6gDNfYv0vjFs+Xa8bmGQsWnbnuuQh1p7vV+BNyN
        TYUqvv54kWqxfNL/9oPRuJdKoeIU543LTywGaO9xd96qbYUqZOMb27dovG6W+0/8KVRoXTm10NnbADYW
        qpj/tt1Hicvpr7pxuYRCxZBuXHhI7al0a0HAx9Wd2rGGnexMta2kzRuFfdlS1Kodl0soVKRFHiq4Uqzv
        l7Vrx2gDObr5cKOdk/6rm3q1Y3IJhYqMSLHKGUI2Z+P+Zu3YbCGT/m3cSFzuy+vG4xIKFSMik7XfKGix
        cnekKf84qh2TTW5fUWndEmJZ+aUbi0soVGTla9OKEg9Lmiw6JeBH80u1Y7HNgy/XeCOyI6XHu7XjcAmF
        CiNkutWdq6vUOyVtob5q3V3p1qqd6W/WeiMLf577oEE7BpdQqDBO9gl4eOOR0N1rlcnx35zp3vEc87aG
        fzqV/B/7708e1L5+l1CoyCm5JfDAy9Xq9QMtqrUruAcp8nFz9Bx3J5bLx/8wHyMut4V0r9s1FCp8I/ux
        yrxW2ZNVNlH2YwvB2JEuNfaVGnX2WPePN/7eEwdDt+5f9kSdu+VYZM6YolARKDmhVY5okVU0a/Y0qQ/K
        2hPzFUdyH7a2tU/tKu9Qq3c3qnvXVquvPlao/TddJjv+yw5icjR1kFes8r1YuqM+EstNB6NQEUpyNStl
        +61Zxer78SuvmxeXqV8uLU+UhcyFvWVJmfrBkwcTV2VXTytS547L1/49USZX5fK1k6+XfN1y7Vfx7498
        Arlsckz7eqKAQgUAQyhUADCEQgUAQyhUADCEQgUAQyhUADCEQgUAQyhUADCEQgUAQyhUADCEQgUAQyhU
        ADCEQgUAQyhUADCEQgUAQyhUADCEQgUAQyhUADCEQgUAQyhUADCEQgUAQyhUADCEQgUAQyhUADCEQgUA
        QyhUADCEQgUAQyhUADCEQgUAQyhUADCEQgUAQyhUADCEQgUAQyhUADCEQgUAQyhUADCEQgUAQyhUADCE
        QgUAQyhUADCEQgUAQyhUADCEQgUAQyhUADCEQgUAQyhUADAkUaiz3zqm/UUAQPqkS/MWbavT/iIAIH2L
        412at2Jng/YXAQDpW7mrUeWt39ek/UUAQPo27G9WeZsLW7W/CABI35aiVpW3p7JD+4sAgPTtrepUeS2d
        /dpfBACkT7o0T8Vz0cSY9jcAAIZ36eSYVOknhfqTBYe0vwkAMLybFh06Waj3rK3W/iYAwPDuW1d9slCZ
        iwoAI/firsaThVpe36P9TQCA4R1u7DlZqJIrpxZqfyMAILWrpxV5LTqoUO9cXaX9zQCA1OQZVDKfFuor
        e1mCCgCZ2ri/2WvRQYXa2TugvvBwvvYPAADOdMH4fNUV785kPi1UyR0v8bEfANJ195oqrz0/ySmFuv1g
        m/YPAQDOtONQu9een+SUQh04odQVU3jaDwDDuWpqUaIzB+eUQpXIrtO6PwwAOOmZd+u91jyZMwpVHk5d
        PInNUgAglUviHSldeXrOKFTJE1s4uA8AUpn/9nGvLU+NtlBbuvrVqAkF2r8IAKLsS48UqLbuM69OJdpC
        lSzZzr1UADjdsh1n3jtNJmWh9g+cUN+de1D7FwJAFH3viYOJbkyVlIUqkTNSznpA/xcDQJRIF+6u7PDa
        UZ8hC1VyL5tPA4C639tEeqgMW6gdPQPqmzOLtf8AAETBNdOLUz6IGpxhC1VSeLRLnTeOjVMARM85Yw+o
        /Jourw2HTlqFKnn+A45JARA9K73jTdJJ2oUqYRNqAFEyePPodJJRocp0gdueq9D+wwDgkluXlau+IaZI
        6ZJRoUpkM1XO8Qfgsh8+VZp4IJ9pMi5USVNHvxo9u0T7QgDAZtJt0nEjyYgKVdLc2c+VKgCnyJVpQ3uf
        13KZZ8SFKunpO6F+yz1VAA64dVmFdku+TJJVoUrkpu1da3j6D8Be8jQ/0wdQumRdqMms3t3I5H8AVpFJ
        +7KznqkYK1RJybFu9W0eVgGwwL/NKFaxI+mtgEo3RgtV0t4zoO5bV80uVQBCSbpJNjqRrjId44WazP7q
        TnX9vFLtgAAgCGPmlqjdFUNvwZdNclaoEllZtfS9evXFRzhOBUBw5NgS2Wl/qM2hTSSnhZqMXFrLjd/L
        HuXMfwD+uWhiTM3cVJs4J8+P+FKoycgcLynWq6YWaQcPACZIx8i5+bJU3s/4WqjJyFX3zvJ29dCGmsSl
        uO4LAgCZuGB8vvrzqsNqU6wl5x/tUyWQQh0c+R9kw77mxOKAr03jyhVA+q6Od8bd8e7YuL/Z96tRXQIv
        1NNT2dCT2NBVpl7dtOiQunRyTPuFBBAt0gU/i3eCdMOL8Y443NjjtUZYotT/Aywrsx8hQXk8AAAAAElF
        TkSuQmCC
</value>
  </data>
</root>